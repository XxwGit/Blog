package com.json;

import java.io.IOException;

import org.eclipse.jface.action.MenuManager;
import org.eclipse.jface.action.StatusLineManager;
import org.eclipse.jface.action.ToolBarManager;
import org.eclipse.jface.window.ApplicationWindow;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.FileDialog;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;
import org.eclipse.ui.forms.events.HyperlinkAdapter;
import org.eclipse.ui.forms.events.HyperlinkEvent;
import org.eclipse.ui.forms.widgets.FormToolkit;
import org.eclipse.ui.forms.widgets.Hyperlink;

public class Xml2Json extends ApplicationWindow {
	protected Shell shell;  
	private Text fileDirText;  
	private Text fileNameText;  
	private final FormToolkit formToolkit = new FormToolkit(Display.getDefault());  
	public Xml2Json() {
		super(null);
		createActions();
		addToolBar(SWT.FLAT | SWT.WRAP);
		addMenuBar();
		addStatusLine();
	}
	
	public void name() {
		
	}
	protected void createContents() {  
        shell = new Shell();  
        shell.setSize(450, 300);  
        shell.setText("开发异常网");  
          
        Button button = new Button(shell, SWT.NONE);  
        button.addSelectionListener(new SelectionAdapter() {  
            @Override  
            public void widgetSelected(SelectionEvent e) {  
                FileDialog fileDialog=new FileDialog(shell);  
                fileDialog.setText("chooser");  
                fileDialog.open();  
                fileDirText.setText(fileDialog.getFilterPath());  
                fileNameText.setText(fileDialog.getFileName());  
            }  
        });  
        button.setBounds(213, 77, 72, 22);  
        button.setText("浏览");  
          
        Label lblNewLabel = new Label(shell, SWT.NONE);  
        lblNewLabel.setBounds(139, 127, 54, 12);  
        lblNewLabel.setText("文件路径");  
          
        fileDirText = new Text(shell, SWT.BORDER);  
        fileDirText.setBounds(213, 127, 70, 18);  
          
        Label lblNewLabel_1 = new Label(shell, SWT.NONE);  
        lblNewLabel_1.setBounds(139, 173, 54, 12);  
        lblNewLabel_1.setText("文件名");  
          
        fileNameText = new Text(shell, SWT.BORDER);  
        fileNameText.setBounds(215, 168, 70, 18);  
          
        Hyperlink hprlnkNewHyperlink = formToolkit.createHyperlink(shell, "更多详情", SWT.NONE);  
        hprlnkNewHyperlink.setBounds(139, 81, 63, 14);  
        formToolkit.paintBordersFor(hprlnkNewHyperlink);  
        hprlnkNewHyperlink.addHyperlinkListener(new HyperlinkAdapter(){  
  
            @Override  
            public void linkActivated(HyperlinkEvent e) {  
                try {  
                     Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler http://www.devexception.com/j2se/554187.htm/");  
                    } catch (IOException e1) {  
                     e1.printStackTrace();  
                    }  
  
            }  
              
        });  
    }  
	/**
	 * Create the actions.
	 */
	private void createActions() {
		// Create the actions
	}

	/**
	 * Create the menu manager.
	 * @return the menu manager
	 */
	@Override
	protected MenuManager createMenuManager() {
		return null;
	}

	/**
	 * Create the toolbar manager.
	 * @return the toolbar manager
	 */
	@Override
	protected ToolBarManager createToolBarManager(int style) {
		return null;
	}

	/**
	 * Create the status line manager.
	 * @return the status line manager
	 */
	@Override
	protected StatusLineManager createStatusLineManager() {
		StatusLineManager statusLineManager = new StatusLineManager();
		return statusLineManager;
	}

	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String args[]) {
		try {
			Xml2Json window = new Xml2Json();
			window.setBlockOnOpen(true);
			window.open();
			Display.getCurrent().dispose();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Configure the shell.
	 * @param newShell
	 */
	@Override
	protected void configureShell(Shell newShell) {
		super.configureShell(newShell);
		newShell.setText("XmltoJson");
	}

	/**
	 * Return the initial size of the window.
	 */
	@Override
	protected Point getInitialSize() {
		return new Point(530, 275);
	}
	
}
